{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/modelo/produto.ts","webpack:///./src/app/modelo/usuario.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/produto/pesquisa/pesquisa.produto.component.css","webpack:///./src/app/produto/pesquisa/pesquisa.produto.component.html","webpack:///./src/app/produto/pesquisa/pesquisa.produto.component.ts","webpack:///./src/app/produto/produto.component.css","webpack:///./src/app/produto/produto.component.html","webpack:///./src/app/produto/produto.component.ts","webpack:///./src/app/servicos/produto/produto.servico.ts","webpack:///./src/app/servicos/usuario/usuario.servico.ts","webpack:///./src/app/usuario/cadastro/cadastro.usuario.component.css","webpack:///./src/app/usuario/cadastro/cadastro.usuario.component.html","webpack:///./src/app/usuario/cadastro/cadastro.usuario.component.ts","webpack:///./src/app/usuario/login/login.component.css","webpack:///./src/app/usuario/login/login.component.html","webpack:///./src/app/usuario/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProdutoComponent } from './produto/produto.component';\r\nimport { LoginComponent } from './usuario/login/login.component';\r\nimport { GuardaRotas } from '../../autorizacao/guarda.rotas';\r\nimport { UsuarioServico } from './servicos/usuario/usuario.servico';\r\nimport { CadastroUsuarioComponet } from './usuario/cadastro/cadastro.usuario.component';\r\nimport { ProdutoServico } from './servicos/produto/produto.servico';\r\nimport { PesquisaProdutoComponet } from './produto/pesquisa/pesquisa.produto.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        ProdutoComponent,\r\n        LoginComponent,\r\n        CadastroUsuarioComponet,\r\n        PesquisaProdutoComponet\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n        { path: '', component: HomeComponent, pathMatch: 'full' },\r\n        { path: 'produto', component: ProdutoComponent},\r\n        { path: 'entrar', component: LoginComponent },\r\n        { path: \"novo-usuario\", component: CadastroUsuarioComponet },\r\n        { path: \"pesquisar-produto\", component: PesquisaProdutoComponet }\r\n    ])\r\n    ],\r\n    providers: [UsuarioServico, ProdutoServico],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n//{ path: 'produto', component: ProdutoComponent, canActivate: [GuardaRotas] },\r\n","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","export class Produto {\r\n    id: number;\r\n    nome: string;\r\n    descricao: string;\r\n    preco: number;\r\n    nomeArquivo:string\r\n}\r\n","export class Usuario {\r\n    id: number;\r\n    email: string;\r\n    senha: string;\r\n    nome: string;\r\n    sobreNome: string;\r\n}\r\n","module.exports = \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n  <nav class='navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3'>\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]='[\\\"/\\\"]'>QuickBuy</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\" [ngClass]='{\\\"show\\\": isExpanded}'>\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' [routerLinkActiveOptions]='{ exact: true }'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/\\\"]'>Home</a>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/pesquisar-produto\\\"]'>Produto</a>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' *ngIf=\\\"!usuarioLogado()\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/entrar\\\"]'>Entrar</a>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' *ngIf=\\\"usuarioLogado()\\\">\\r\\n            <a class=\\\"nav-item nav-link text-dark\\\" [routerLink]='[\\\"/sair\\\"]' (click)=\\\"sair()\\\">Sair</a>\\r\\n          </li>\\r\\n          <li class=\\\"=nav-item dropdown\\\" *ngIf=\\\"usuarioLogado()\\\">\\r\\n            <a class=\\\"nav-link dropdown-toggle\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" href=\\\"#\\\"\\r\\n               aria-expanded=\\\"false\\\" id=\\\"linkMenu\\\" data-toggle=\\\"dropdown\\\">{{usuario.nome}}</a>\\r\\n\\r\\n            <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"linkMenu\\\">\\r\\n              <li class=\\\"dropdown-item\\\" role=\\\"menu\\\" [routerLink]='[\\\"/sair\\\"]' (click)=\\\"sair()\\\">Sair</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n\\r\\n          <!--\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' *ngIf=\\\"usuarioLogado()\\\">\\r\\n            <a class=\\\"nav-item nav-link text-dark\\\" [routerLink]='[\\\"/sair\\\"]' (click)=\\\"sair()\\\">Sair</a>\\r\\n          </li>\\r\\n          -->\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioServico } from '../servicos/usuario/usuario.servico';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n    isExpanded = false;\r\n\r\n    constructor(private router: Router, private usuarioServico: UsuarioServico) {\r\n\r\n    }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n    }\r\n\r\n\r\n    public usuarioLogado(): boolean {\r\n       // var usuarioLogado = sessionStorage.getItem(\"usuario-autenticado\");\r\n       // if (usuarioLogado == \"1\") {\r\n       //     return true;\r\n        //}\r\n        return this.usuarioServico.usuario_autenticado();\r\n\r\n    }\r\n\r\n    sair() {\r\n        this.usuarioServico.limpar_sessao();\r\n        this.router.navigate([\"/\"]);\r\n\r\n    }\r\n\r\n    get usuario() {\r\n        return this.usuarioServico.usuario;    \r\n    }\r\n\r\n}\r\n","module.exports = \".titulo {\\r\\n  color: #666;\\r\\n}\\r\\n\"","module.exports = \"<h1 class=\\\"h4 titulo mb-2\\\">Pesquisa de Produtos</h1>\\r\\n<p *ngIf=\\\"!produtos\\\">Carregando Produtos...</p>\\r\\n\\r\\n<button class=\\\"btn btn-primary mb-2\\\" (click)=\\\"adicionarProduto()\\\">Adicionar Produtos</button>\\r\\n\\r\\n<table class=\\\"table table-hover\\\" *ngIf=\\\"produtos\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Nome</th>\\r\\n      <th>Descrição</th>\\r\\n      <th>Preço</th>\\r\\n      <th>Imagem</th>\\r\\n      <th></th>\\r\\n      <th></th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let p of produtos\\\">\\r\\n      <td>{{p.nome}}</td>\\r\\n      <td style=\\\"width:50%; height:10%\\\">{{p.descricao}}</td>\\r\\n      <td style=\\\"width:10%; height:10%\\\">{{p.preco}}</td>\\r\\n      <td><img src=\\\"../../../../../arquivos/{{p.nomeArquivo}}\\\" style=\\\"width:40%; height:10%\\\" /></td>\\r\\n      <td><button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"editarProduto(p)\\\">Editar</button></td>\\r\\n      <td><button class=\\\"btn btn-danger btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Deletar</button></td>\\r\\n\\r\\n      <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Atenção</h5>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              Deseja realmente deletar o produto selecionado?\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deletarProduto(p)\\\">Sim</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancelar</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n\\r\\n</table>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Produto } from \"../../modelo/produto\";\r\nimport { ProdutoServico } from \"../../servicos/produto/produto.servico\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"pesquisa-produto\",\r\n    templateUrl: \"./pesquisa.produto.component.html\",\r\n    styleUrls: [\"./pesquisa.produto.component.css\"]\r\n})\r\n\r\nexport class PesquisaProdutoComponet implements OnInit {\r\n\r\n    public produtos: Produto[];\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    constructor(private produtoServico: ProdutoServico, private router: Router) {\r\n        this.produtoServico.obterTodosProdutos()\r\n            .subscribe(\r\n                produtos => {\r\n                    this.produtos = produtos\r\n                },\r\n                e => {\r\n                    console.log(e.error);\r\n                });\r\n    }\r\n\r\n    public adicionarProduto() {\r\n        this.router.navigate(['/produto']);\r\n    }\r\n\r\n    public editarProduto(produto: Produto) {\r\n        sessionStorage.setItem('produtoSession', JSON.stringify(produto));\r\n        this.router.navigate(['/produto']);\r\n    }\r\n\r\n    public deletarProduto(produto: Produto) {\r\n        this.produtoServico.deletar(produto)\r\n            .subscribe(\r\n               produtos => {\r\n                  this.produtos = produtos;\r\n               }, e => {\r\n                  console.log(e.errors);\r\n               }\r\n\r\n            )\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \".titulo{\\r\\n  color: #666;\\r\\n}\\r\\n\\r\\n.custom-file-input:lang(en)~ .custom-file-label::after{\\r\\n  content: \\\"Selecionar\\\";\\r\\n}\\r\\n\\r\\n.invalid-feedback{\\r\\n  display:block;\\r\\n}\\r\\n\\r\\n.valid-feedback{\\r\\n  display:block;\\r\\n}\\r\\n\"","module.exports = \"<h1 class=\\\"h4 titulo\\\">Cadastro de Produto</h1>\\r\\n<label for=\\\"inputNome\\\" class=\\\"sr-only\\\">Nome</label>\\r\\n<input type=\\\"text\\\" id=\\\"inputNome\\\"\\r\\n       name=\\\"nomeProduto\\\"\\r\\n       placeholder=\\\"Nome do Produto\\\"\\r\\n       class=\\\"form-control mb-2 col-md-4\\\"\\r\\n       [ngClass]=\\\"{\\r\\n          'is-invalid': nome.invalid && (nome.dirty || nome.touched),\\r\\n          'is-valid': nome.valid && (nome.dirty || nome.touched)\\r\\n       }\\\"\\r\\n       [(ngModel)]=\\\"produto.nome\\\"\\r\\n       #nome=\\\"ngModel\\\"\\r\\n       required />\\r\\n<div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"nome.invalid && (nome.dirty || nome.touched)\\\">\\r\\n  <div *ngIf=\\\"nome.errors.required\\\">\\r\\n    Nome do produto é de preenchimento obrigatório\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<label for=\\\"inputNome\\\" class=\\\"sr-only\\\">Descrição</label>\\r\\n<input type=\\\"text\\\" id=\\\"inputDescricao\\\"\\r\\n       name=\\\"descricaoProduto\\\"\\r\\n       placeholder=\\\"Descrição do produto\\\"\\r\\n       class=\\\"form-control mb-2 col-md-4\\\"\\r\\n       [ngClass]=\\\"{\\r\\n          'is-invalid': descricao.invalid && (descricao.dirty || descricao.touched),\\r\\n          'is-valid': descricao.valid && (descricao.dirty || descricao.touched)\\r\\n       }\\\"\\r\\n       [(ngModel)]=\\\"produto.descricao\\\"\\r\\n       #descricao=\\\"ngModel\\\"\\r\\n       required />\\r\\n<div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"descricao.invalid && (descricao.dirty || descricao.touched)\\\">\\r\\n  <div *ngIf=\\\"descricao.errors.required\\\">\\r\\n    Descrição do produto é de preenchimento obrigatório\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<label for=\\\"inputPreco\\\" class=\\\"sr-only\\\">Preço</label>\\r\\n<input type=\\\"number\\\"\\r\\n       id=\\\"inputPreco\\\"\\r\\n       name=\\\"precoProduto\\\"\\r\\n       placeholder=\\\"Preço\\\"\\r\\n       class=\\\"form-control mb-2 col-md-2\\\"\\r\\n       [ngClass]=\\\"{\\r\\n          'is-invalid': preco.invalid && (preco.dirty || preco.touched),\\r\\n          'is-valid': preco.valid && (preco.dirty || preco.touched)\\r\\n       }\\\"\\r\\n       [(ngModel)]=\\\"produto.preco\\\"\\r\\n       #preco=\\\"ngModel\\\"\\r\\n       required/>\\r\\n\\r\\n<div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"preco.invalid && (preco.dirty || preco.touched)\\\">\\r\\n  <div *ngIf=\\\"preco.errors.required\\\">\\r\\n    Preço do produto é de preenchimento obrigatório\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"input-group\\\">\\r\\n  <div class=\\\"custom-file col-md-4 mb-2\\\">\\r\\n    <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputFile\\\"/>\\r\\n    <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputFile\\\"(change)=\\\"inputChange($event.target.files)\\\"/>\\r\\n    <label for=\\\"inputFile\\\" class=\\\"custom-file-label\\\">Escolha uma foto</label>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-inline\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" style=\\\"margin-right:4px;\\\" (click)=  \\\"cadastrar()\\\" [disabled]=\\\"ativar_spinner\\\">\\r\\n    <span class=\\\"spinner-border spinner-border-sm\\\" *ngIf=\\\"ativar_spinner\\\"></span>\\r\\n    Cadastrar\\r\\n  </button>\\r\\n  <button class=\\\"btn btn-secondary \\\" [routerLink]=\\\"['/pesquisar-produto']\\\">Cancelar</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"alert-danger col-md-4 mb-2\\\" *ngIf=\\\"mensagem\\\">\\r\\n  {{mensagem}}\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from \"@angular/core\"\r\nimport { Produto } from \"../modelo/produto\";\r\nimport { ProdutoServico } from \"../servicos/produto/produto.servico\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"app-produto\",\r\n    templateUrl: \"./produto.component.html\",\r\n    styleUrls: [\"./produto.component.css\"]\r\n})\r\nexport class ProdutoComponent implements OnInit {\r\n\r\n    public produto: Produto;\r\n    public ativar_spinner: boolean;\r\n    public arquivoSelecionado: File;\r\n    public mensagem: string;\r\n\r\n    constructor(private produtoServico: ProdutoServico, private router: Router) {\r\n        this.produto = new Produto();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        debugger;\r\n        var produtoSession = sessionStorage.getItem('produtoSession');\r\n        if (produtoSession) {\r\n            this.produto = JSON.parse(produtoSession);\r\n        }\r\n        else {\r\n            this.produto = new Produto();\r\n        }\r\n    }\r\n\r\n    public inputChange(files: FileList) {\r\n        this.arquivoSelecionado = files.item(0);\r\n        this.ativarEspera();\r\n        this.produtoServico.enviarArquivo(this.arquivoSelecionado)\r\n            .subscribe(\r\n                nomeArquivo => {\r\n                    this.produto.nomeArquivo = nomeArquivo;\r\n                    console.log(nomeArquivo);\r\n                    this.desativarEspera();\r\n                },\r\n                e => {\r\n                    console.log(e.error);\r\n                    this.desativarEspera();\r\n                });\r\n    }\r\n   \r\n    public cadastrar() {\r\n        this.ativarEspera();\r\n        this.produtoServico.cadastrar(this.produto)\r\n            .subscribe(\r\n                produtoJson => {\r\n                    console.log(produtoJson);\r\n                    this.desativarEspera();\r\n                    this.router.navigate(['/pesquisar-produto']);\r\n                },\r\n                e => {\r\n                    console.log(e.error);\r\n                    this.mensagem = e.error;\r\n                    this.desativarEspera();\r\n                }\r\n            );\r\n    }\r\n\r\n    public ativarEspera() {\r\n        this.ativar_spinner = true;\r\n    }\r\n\r\n    public desativarEspera() {\r\n        this.ativar_spinner = false;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import {Injectable, Inject, OnInit } from \"@angular/core\"\r\nimport { HttpClient, HttpHandler, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Produto } from \"../../modelo/produto\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class ProdutoServico implements OnInit {\r\n    ngOnInit(): void {\r\n        this.produtos = [];\r\n    }\r\n\r\n    private _baseUrl: string;\r\n    public produtos: Produto[];\r\n\r\n    //constructor(private http: HttpClient, @Inject('Base_URL') baseUrl: string) {\r\n    constructor(private http: HttpClient) {\r\n        //this._baseUrl = baseUrl;\r\n    }\r\n\r\n    get headers(): HttpHeaders {\r\n        return new HttpHeaders().set('content-type', 'application/json');\r\n    }\r\n\r\n    public cadastrar(produto: Produto): Observable<Produto> {\r\n        debugger;\r\n        return this.http.post<Produto>(\"https://localhost:44363/\" + \"api/produto\",\r\n                                       JSON.stringify(produto) ,{ headers: this.headers });\r\n    }\r\n\r\n    public salvar(produto: Produto): Observable<Produto> {\r\n        return this.http.post<Produto>(\"https://localhost:44363/\" + \"api/produto/salvar\",\r\n            JSON.stringify(produto), { headers: this.headers });\r\n    }\r\n\r\n    public deletar(produto: Produto): Observable<Produto[]> {\r\n        return this.http.post<Produto[]>(\"https://localhost:44363/\" + \"api/produto/deletar\",\r\n            JSON.stringify(produto), { headers: this.headers });\r\n    }\r\n\r\n    public obterTodosProdutos(): Observable<Produto[]> {\r\n        return this.http.get<Produto[]>(\"https://localhost:44363/\" + \"api/produto\");\r\n    }\r\n\r\n    public obterProduto(produtoId: number): Observable<Produto> {\r\n        return this.http.get<Produto>(\"https://localhost:44363/\" + \"api/produto\");\r\n    }\r\n\r\n\r\n    enviarArquivo(arquivoSelecionado: File): Observable<string> {\r\n        const formData: FormData = new FormData();\r\n        formData.append(\"arquivoEnviado\", arquivoSelecionado, arquivoSelecionado.name);\r\n        return this.http.post<string>(\"https://localhost:44363/\" + \"api/produto/enviarArquivo\", formData);\r\n            \r\n    }\r\n\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { HttpClient, HttpHandler, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from  \"rxjs\";\r\nimport { getBaseUrl } from \"../../../main\";\r\nimport { Usuario } from \"../../modelo/usuario\";\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class UsuarioServico {\r\n\r\n    private baseURL: string;\r\n    private _usuario: Usuario;\r\n\r\n    set usuario(usuario: Usuario) {\r\n\r\n        sessionStorage.setItem(\"usuario-autenticado\", JSON.stringify(this.usuario));\r\n        sessionStorage.setItem(\"usuario-autenticado\", JSON.stringify(usuario));\r\n        this._usuario = usuario;\r\n    }\r\n\r\n    get usuario(): Usuario {\r\n        let usuario_json = sessionStorage.getItem(\"usuario-autenticado\");\r\n        this._usuario = JSON.parse(usuario_json);\r\n        return this._usuario;\r\n    }\r\n\r\n    public usuario_autenticado(): boolean {\r\n        return this._usuario != null && this._usuario.email != \"\" && this._usuario.senha != \"\";\r\n    }\r\n\r\n    public limpar_sessao() {\r\n        sessionStorage.setItem(\"usuario-autenticado\", \"0\");\r\n        this._usuario = null;\r\n    } \r\n\r\n    get headers(): HttpHeaders {\r\n        return new HttpHeaders().set('content-type', 'application/json');\r\n    }\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') getBaseUrl: string) {\r\n        this.baseURL = getBaseUrl;\r\n    }\r\n    public verificaUsuario(usuario: Usuario): Observable<Usuario> {\r\n        const headers = new HttpHeaders().set('content-type', 'application/json');\r\n        var body = {\r\n            email: usuario.email,\r\n            senha: usuario.senha\r\n        }\r\n\r\n        //return this.http.post<Usuario>(this.baseURL + \"api/usuario/VerificarUsuario\", body, { headers });\r\n        return this.http.post<Usuario>(\"https://localhost:44363/\" + \"api/usuario/VerificarUsuario\", body, { headers });\r\n    }\r\n\r\n    public cadastrarUsuario(usuario: Usuario): Observable<Usuario> {\r\n        //return this.http.post<Usuario>(this.baseURL + \"api/usuario\", body, { headers });\r\n        return this.http.post<Usuario>(\"https://localhost:44363/\" + \"api/usuario\", JSON.stringify(usuario), { headers: this.headers });\r\n    }\r\n}\r\n","module.exports = \".form-signin{\\r\\n  width: 100%;\\r\\n  max-width: 420px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"email\\\"]\\r\\n{\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin .form-control{\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.login{\\r\\n  color: #666;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"text-center\\\">\\r\\n  <form class=\\\"form-signin\\\">\\r\\n    <h1 class=\\\"h4 mb-2 login\\\">Criar conta</h1>\\r\\n\\r\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email</label>\\r\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\"\\r\\n           name=\\\" = email\\\" placeholder=\\\"Email\\\"\\r\\n           class=\\\"form-control mb-2\\\"\\r\\n           #email=\\\"ngModel\\\"\\r\\n           [ngClass]=\\\"{\\r\\n            'is-invalid':email.invalid && (email.touched || email.dirty),\\r\\n            'is-valid':email.valid && (email.touched || email.dirty)\\r\\n           }\\\"\\r\\n           [(ngModel)]=\\\"usuario.email\\\"\\r\\n           required />\\r\\n\\r\\n    <div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"email.invalid && (email.touched || email.dirty)\\\">\\r\\n      <div *ngIf=\\\"email.errors.required\\\">\\r\\n        Email inválido!\\r\\n      </div>\\r\\n      <div *ngIf=\\\"email.errors.email\\\">\\r\\n        Email está no formato inválido!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <label for=\\\"inputSenha\\\" class=\\\"sr-only\\\">Senha</label>\\r\\n    <input type=\\\"password\\\" id=\\\"inputSenh\\\"\\r\\n           name=\\\"senha\\\" placeholder=\\\"Senha\\\"\\r\\n           class=\\\"form-control mb-2\\\"\\r\\n           #senha=\\\"ngModel\\\"\\r\\n           [(ngModel)]=\\\"usuario.senha\\\"\\r\\n           [ngClass]=\\\"{\\r\\n            'is-invalid':senha.invalid && (senha.touched || senha.dirty),\\r\\n            'is-valid':senha.valid && (senha.touched || senha.dirty)\\r\\n           }\\\"\\r\\n           required />\\r\\n\\r\\n    <div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"senha.invalid && (senha.dirty || senha.touched)\\\">\\r\\n      <div *ngIf=\\\"senha.errors.required\\\">\\r\\n        Senha inválida!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <label for=\\\"inputNome\\\" class=\\\"sr-only\\\">Nome</label>\\r\\n    <input type=\\\"text\\\" id=\\\"inputNome\\\"\\r\\n           name=\\\" = nome\\\" placeholder=\\\"Nome\\\"\\r\\n           class=\\\"form-control mb-2\\\"\\r\\n           #nome=\\\"ngModel\\\"\\r\\n           [ngClass]=\\\"{\\r\\n            'is-invalid':nome.invalid && (nome.touched || nome.dirty),\\r\\n            'is-valid':nome.valid && (nome.touched || nome.dirty)\\r\\n           }\\\"\\r\\n           [(ngModel)]=\\\"usuario.nome\\\"\\r\\n           required />\\r\\n\\r\\n    <div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"nome.invalid && (nome.touched || nome.dirty)\\\">\\r\\n      <div *ngIf=\\\"nome.errors.required\\\">\\r\\n        Nome é de preenchimento obrigatório!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <label for=\\\"inputSobreNome\\\" class=\\\"sr-only\\\">Sobre nome</label>\\r\\n    <input type=\\\"text\\\" id=\\\"inputSobreNome\\\"\\r\\n           name=\\\" = sobreNome\\\" placeholder=\\\"Sobre Nome\\\"\\r\\n           class=\\\"form-control mb-2\\\"\\r\\n           #sobreNome=\\\"ngModel\\\"\\r\\n           [ngClass]=\\\"{\\r\\n            'is-invalid':sobreNome.invalid && (sobreNome.touched || sobreNome.dirty),\\r\\n            'is-valid':sobreNome.valid && (sobreNome.touched || sobreNome.dirty)\\r\\n           }\\\"\\r\\n           [(ngModel)]=\\\"usuario.sobreNome\\\"\\r\\n           required />\\r\\n\\r\\n    <div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"sobreNome.invalid && (sobreNome.touched || sobreNome.dirty)\\\">\\r\\n      <div *ngIf=\\\"sobreNome.errors.required\\\">\\r\\n        Sobre Nome é de preenchimento obrigatório!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block mb-2\\\" type=\\\"submit\\\" (click)=\\\"cadastrar()\\\" [disabled]=\\\"ativar_spinner\\\">\\r\\n      <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"ativar_spinner\\\"></span>\\r\\n      Cadastrar\\r\\n    </button>\\r\\n    <div><a [routerLink]='[\\\"/entrar\\\"]'>Voltar</a></div>\\r\\n    <div class=\\\"alert alert-danger mb-2\\\" *ngIf=\\\"mensagem\\\">\\r\\n      {{mensagem}}\\r\\n    </div>\\r\\n<<<<<<< HEAD\\r\\n=======\\r\\n\\r\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"usuarioCadastrado\\\">\\r\\n      Usuario cadastrado com sucesso!<a class=\\\"alert-link\\\" [routerLink]='[\\\"/entrar\\\"]'> Clique aqui</a> para entrar com a sua conta.\\r\\n    </div> \\r\\n\\r\\n>>>>>>> alteração de nome de pasta\\r\\n    <img src=\\\"../../../assets/img/QuickBuy-logo.jpg\\\" />\\r\\n\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Usuario } from \"../../modelo/usuario\";\r\nimport { UsuarioServico } from \"../../servicos/usuario/usuario.servico\";\r\n\r\n@Component({\r\n    selector: \"cadastro-usuario\",\r\n    templateUrl: \"./cadastro.usuario.component.html\",\r\n    styleUrls:[\"./cadastro.usuario.component.css\"]\r\n})\r\n\r\nexport class CadastroUsuarioComponet implements OnInit {\r\n    public usuario: Usuario;\r\n    public ativar_spinner: boolean;\r\n    public mensagem: string;\r\n    public usuarioCadastrado: boolean;\r\n\r\n    private _usuario: Usuario;\r\n    constructor(public usuarioServico: UsuarioServico) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.usuario = new Usuario();\r\n\r\n    }\r\n\r\n\r\n    public limpar_sessao() {\r\n        sessionStorage.setItem(\"usuario-autenticado\", \"0\");\r\n        this._usuario = null;\r\n    } \r\n\r\n    public cadastrar() {\r\n        this.ativar_spinner = true;\r\n            ;\r\n        this.usuarioServico.cadastrarUsuario(this.usuario)\r\n            .subscribe(\r\n                usuarioJson => {\r\n                    this.usuarioCadastrado = true;\r\n                    this.mensagem = \"\";\r\n                    this.ativar_spinner = false;\r\n                },\r\n                e => {\r\n                    this.mensagem = e.error;\r\n                    this.ativar_spinner = false;\r\n                }\r\n            );\r\n    }\r\n    \r\n\r\n}\r\n","module.exports = \".form-signin{\\r\\n  width: 100%;\\r\\n  max-width: 420px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"email\\\"]\\r\\n{\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin .form-control{\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.login{\\r\\n  color: #666;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"text-center\\\">\\r\\n  <form class=\\\"form-signin\\\">\\r\\n    <h1 class=\\\"h4 mb-2 login\\\">Login do Cliente</h1>\\r\\n\\r\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email</label>\\r\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\"\\r\\n           name=\\\" = email\\\" placeholder=\\\"Informe o seu Email\\\"\\r\\n           class=\\\"form-control mb-2\\\"\\r\\n           #email=\\\"ngModel\\\"\\r\\n           [ngClass]=\\\"{\\r\\n            'is-invalid':email.invalid && (email.touched || email.dirty),\\r\\n            'is-valid':email.valid && (email.touched || email.dirty) \\r\\n           }\\\"\\r\\n           [(ngModel)]=\\\"usuario.email\\\" \\r\\n           required/>\\r\\n\\r\\n    <div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"email.invalid && (email.touched || email.dirty)\\\">\\r\\n      <div *ngIf=\\\"email.errors.required\\\">\\r\\n        Email inválido!\\r\\n      </div>\\r\\n      <div *ngIf=\\\"email.errors.email\\\">\\r\\n        Email está no formato inválido!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <label for=\\\"inputSenha\\\" class=\\\"sr-only\\\">Senha</label>\\r\\n    <input type=\\\"password\\\" id=\\\"inputSenh\\\"\\r\\n           name=\\\"senha\\\" placeholder=\\\"Senha\\\"\\r\\n           class=\\\"form-control mb-2\\\"\\r\\n           #senha=\\\"ngModel\\\"\\r\\n           [(ngModel)]=\\\"usuario.senha\\\"\\r\\n            [ngClass]=\\\"{\\r\\n            'is-invalid':senha.invalid && (senha.touched || senha.dirty),\\r\\n            'is-valid':senha.valid && (senha.touched || senha.dirty) \\r\\n           }\\\"          \\r\\n           required/>\\r\\n\\r\\n    <div class=\\\"invalid-feedback mb-2\\\" *ngIf=\\\"senha.invalid && (senha.dirty || senha.touched)\\\">\\r\\n      <div *ngIf=\\\"senha.errors.required\\\">\\r\\n        Senha inválida!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block mb-2\\\" type=\\\"submit\\\" (click)=\\\"entrar()\\\" [disabled]=\\\"ativar_spinner\\\">\\r\\n      <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"  *ngIf=\\\"ativar_spinner\\\"></span>\\r\\n      Entrar\\r\\n    </button>\\r\\n    <div>Novo por aqui? <a [routerLink]='[\\\"/novo-usuario\\\"]'>Cadastre-se</a></div>\\r\\n\\r\\n    <div class=\\\"alert alert-danger mb-2\\\" *ngIf=\\\"mensagem\\\">\\r\\n      {{mensagem}}\\r\\n    </div>\\r\\n    <img src=\\\"../../../assets/img/QuickBuy-logo.jpg\\\"/>\\r\\n\\r\\n  </form>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Usuario } from \"../../modelo/usuario\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { UsuarioServico } from \"../../servicos/usuario/usuario.servico\";\r\n\r\n@Component({\r\n    selector: \"app-login\",\r\n    templateUrl: \"./login.component.html\",\r\n    styleUrls:[\"./login.component.css\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    public usuario;\r\n    public returnUrl: string;\r\n    public mensagem: string;\r\n    private ativar_spinner: boolean;\r\n\r\n    constructor(private router: Router, private activatedRouter: ActivatedRoute, private usuarioServico: UsuarioServico) {\r\n        this.usuario = new Usuario();       \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.returnUrl = this.activatedRouter.snapshot.queryParams['returnUrl'];\r\n    }\r\n\r\n    entrar() {\r\n        this.ativar_spinner = true;\r\n        this.usuarioServico.verificaUsuario(this.usuario)\r\n            .subscribe(\r\n                usuario_json => {\r\n                    // essa linha seá executada no caso de retorno sem erro\r\n                    //console.log(data);\r\n                    // sessionStorage.setItem(\"usuario-autenticado\", \"1\");\r\n                    this.usuarioServico.usuario = usuario_json\r\n\r\n                    if (this.returnUrl == null) {\r\n                        this.router.navigate(['/']);\r\n                    }\r\n                    else {\r\n                        this.router.navigate([this.returnUrl]);\r\n                    }\r\n\r\n                },\r\n                err => {\r\n                    // console.log(err.error);\r\n                    this.mensagem = err.error;\r\n                    this.ativar_spinner = false;\r\n                }\r\n            );\r\n     \r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}